Introduction
------------
This project is an extended version of LeakTracer made by Erwin S. Andreasen
(see http://www.andreasen.org/LeakTracer/).

In addition to basic functionality, it adds following features:
(*) Functions to stop and end monitoring at any point of time, in
    order to avoid "false alarms", e.g. for start-up code.
(*) Separate flags for monitoring allocations and releases. Allows
    to stop monitoring new allocations, but still monitor releases.
    Useful in applications which release memory after some period of time
(*) Monitoring of memory alocated by certain threads. For example, only
    threads performing specific task.
(*) Printing full call stack of allocated memory.


Example of output:

found 1 leak(s)
256 bytes lost in 1 blocks, from following call stack:
        /root/LeakTrace/MemoryTrace.hpp:281
        /root/LeakTrace/AllocationHandlers.cpp:29
        /root/LeakTrace/test.cc:56


Installation
------------

make
   Compiles static library which exposes all LearTracer functionality

make test
   1) Builds test application which creates some memory leaks
   2) Runs the test application
   3) Parses LeakTracer log to show information in readable format

make clean
   Deletes all binary files and logs created by "make" or "make test"


Contact
-------
For any questions/problems/suggestions please contact
Michael Gopshtein, mgopshtein@gmail.com


2006.

